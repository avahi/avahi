#!/usr/bin/env python
# -*-python-*-
# This file is part of avahi.
#
# avahi is free software; you can redistribute it and/or modify it
# under the terms of the GNU Lesser General Public License as
# published by the Free Software Foundation; either version 2 of the
# License, or (at your option) any later version.
#
# avahi is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public
# License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with avahi; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307
# USA.

import sys

db_type = None

if len(sys.argv)>1 and sys.argv[1] == '--gnu':
    db_type = 'dbm.gnu'
    if sys.version_info >= (3,):
        import dbm.gnu as chosen_dbm
    else:
        import gdbm as chosen_dbm

    sys.argv[1:] = sys.argv[2:]
elif len(sys.argv)>1 and sys.argv[1] == '--ndbm':
    db_type = 'dbm.ndbm'
    if sys.version_info >= (3,):
        import dbm.ndbm as chosen_dbm
    else:
        import dbm as chosen_dbm

    sys.argv[1:] = sys.argv[2:]
elif len(sys.argv)>1 and sys.argv[1] == '--sqlite':
    db_type = 'dbm.sqlite3'
    if sys.version_info >= (3,):
        import dbm.sqlite3 as chosen_dbm
    else:
        import dbm as chosen_dbm

    sys.argv[1:] = sys.argv[2:]
else:
    if sys.version_info >= (3,):
        import dbm as chosen_dbm
        from dbm import whichdb
    else:
        import anydbm as chosen_dbm
        from whichdb import whichdb

if len(sys.argv) > 1:
    infn = sys.argv[1]
else:
    infn = "service-types"

if len(sys.argv) > 2:
    outfn = sys.argv[2]
else:
    outfn = infn + ".db"

db = chosen_dbm.open(outfn, "n")

for ln in open(infn, "r"):
    ln = ln.strip(" \r\n\t")
    
    if ln == "" or ln.startswith("#"):
        continue

    t, n = ln.split(":", 1)

    db[t.strip()] = n.strip()

db.close()

if db_type is None:
    db_type = whichdb(outfn)

if db_type == "dbm.sqlite3":
    # Python dbm.sqlite3 module (which is used by default) sets journal_mode
    # to WAL when creating the database. Unfortunately this makes the database
    # unable to be opened again by the dbm.sqlite3 module if it is stored on a
    # read-only directory.
    #
    # The behavior is documented here:
    # https://sqlite.org/wal.html#read_only_databases
    # > Even though it is possible to open a read-only WAL-mode database, it
    # > is good practice to converted to PRAGMA journal_mode=DELETE prior to
    # > burning an SQLite database image onto read-only media.
    import sqlite3
    conn = sqlite3.connect(outfn)
    conn.execute("PRAGMA journal_mode = DELETE;")
    conn.close()
