---
name: Build test

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-24.04
    concurrency:
      group: ${{ github.workflow }}-${{ toJSON(matrix.env) }}-${{ github.ref }}
      cancel-in-progress: true
    strategy:
      fail-fast: false
      matrix:
        env:
          - { CC: "gcc", DISTCHECK: "true", VALGRIND: "true" }
          - { CC: "gcc", ASAN_UBSAN: "true" }
          - { CC: "clang", ASAN_UBSAN: "false" }
          - { CC: "clang", ASAN_UBSAN: "true" }
    env: ${{ matrix.env }}
    steps:
      - name: Repository checkout
        uses: actions/checkout@v4
      - run: sudo -E .github/workflows/build.sh install-build-deps
      - run: sudo -E .github/workflows/build.sh build
  coverage:
    if: github.repository == 'avahi/avahi'
    runs-on: ubuntu-24.04
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
    permissions:
      contents: read
      checks: write
    env:
      CC: "gcc"
      COVERAGE: "true"
    steps:
      - name: Repository checkout
        uses: actions/checkout@v4
      - run: sudo -E .github/workflows/build.sh install-build-deps
      - run: sudo -E .github/workflows/build.sh build
      - name: Coveralls
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          file: ./coverage.info
          format: lcov

  freebsd:
    runs-on: ubuntu-24.04
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}-freebsd
      cancel-in-progress: true
    steps:
      - name: Repository checkout
        uses: actions/checkout@v4
      - uses: cross-platform-actions/action@v0.29.0
        with:
          operating_system: 'freebsd'
          version: '14.3'
          architecture: 'x86_64'
          run: |
            export CC=clang
            export DISTCHECK=true

            # Do what USES="localbase:ldflags gettext-runtime gmake" do
            # in FreeBSD Ports, namely:
            # - Add /usr/local/include to the compiler's search path
            # - Add /usr/local/include to the linker's search path
            # - Additionally link to libintl because it is a separate library,
            #   unlike on Linux. See https://github.com/avahi/avahi/issues/726
            # - Use GNU make instead of BSD one
            export MAKE="gmake"
            export CFLAGS="-I/usr/local/include"
            export CPPFLAGS="-I/usr/local/include"
            export LDFLAGS="-L/usr/local/lib -lintl"

            sudo -E .github/workflows/build.sh install-build-deps-FreeBSD
            sudo -E .github/workflows/build.sh build
